plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.sonarqube' version '3.0'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

apply from: 'buildscripts/jacoco.gradle'

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "fr.francoisgaucher.poc_sonar_analysis"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
        warningsAsErrors true
        showAll true
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.sonarqube{
    dependsOn("clean")
    dependsOn("jacocoTestReport")
    tasks.findByName('jacocoTestReport').mustRunAfter 'clean'
}

sonarqube {

    def mainSources = 'src/main/java'
    def manifestSources = 'src/main/AndroidManifest.xml'
    def resSources = 'src/main/res'

    def testSources = 'src/test/java'
    def androidTestSources = 'src/androidTest/java'
    def testStubs = 'build/tmp/kapt3/stubs/debugUnitTest'

    def androidLintReportPaths = 'build/reports/lint-results-debug.xml'
    def coverageJacocoXmlReportPaths = 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
    def junitReportPaths = 'build/test-results/testDebugUnitTest'

    properties {
        property "sonar.projectKey", "fr.francoisgaucher.sonar"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", localProperties['SONAR_TOKEN']

        property "sonar.projectName", "POC_sonar_analysis"
        property "sonar.projectVersion", "${android.defaultConfig.versionName}"

        property 'sonar.sources', "$mainSources,$resSources,$manifestSources"
        property 'sonar.tests', "$testSources,$androidTestSources,$testStubs"

        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.sourceEncoding", "UTF-8"

        property 'sonar.androidLint.reportPaths', "$androidLintReportPaths"
        property 'sonar.coverage.jacoco.xmlReportPaths', "$coverageJacocoXmlReportPaths"
        property 'sonar.junit.reportPaths', "$junitReportPaths"
        property 'sonar.jacoco.itReportPath', fileTree(dir: project.projectDir, includes: ['**/*.ec'])
        property 'sonar.jacoco.reportPath', fileTree(dir: project.projectDir, includes: ['**/*.exec'])
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    testImplementation 'junit:junit:4.13.2'
    kaptTest 'junit:junit:4.13.2'

    implementation 'androidx.arch.core:core-testing:2.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    testImplementation "org.mockito:mockito-core:3.11.2"
    testImplementation 'org.mockito:mockito-inline:2.23.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation "io.mockk:mockk:1.12.0"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

    androidTestImplementation('androidx.test.uiautomator:uiautomator:2.2.0')

}